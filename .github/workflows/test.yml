name: Build Test
on:
  push:
    branches: [master]
  pull_request:
    types: [opened, synchronize, reopened]
jobs: # Job 설정
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install Dependencies    # 의존 파일 설치
        run: bun install

      - name: Build                   # React Build test
        run: bun run build


      - name: 실패시
        if: failure()
        uses: actions/github-script@v6
        with:
          github-token: ${{ github.ACTIONFLOW_TOKEN }}
          script: |
            const pull_number = ${{ github.event.pull_request.number }}
            const updated_title = `[TEST FAIL] ${{ github.event.pull_request.title }}`
            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pull_number,
              body: '마지막 코멘트가 아닙니다!',
              event: 'REQUEST_CHANGES'
            })

  processing-work:
    needs: build-test
    if: "!contains(github.event.commit[0].message, 'merge plz')"
    runs-on: ubuntu-latest
    steps:
      - name: working now
        run: echo ${{ github.event.commit[0].message }}

  auto-merge-check:
    needs: build-test
    if: "contains(github.event.head_commit.message, 'merge plz')"
    runs-on: ubuntu-latest
    steps:
      - name: Approve PR, Merge bot comment
        uses: actions/github-script@v6
        with:
          github-token: ${{ github.TOKEN }}
          script: |
            const pull_number = ${{ github.event.pull_request.number }}
            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pull_number,
              body: '머지하겠습니다!',
              event: 'REQUEST_CHANGES',
            })
            
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pull_number,
            })